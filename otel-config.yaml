extensions:
  health_check:
    endpoint: 0.0.0.0:13133 # Default endpoint

receivers:

  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:14318
        cors: 
          allowed_origins:
            - "http://localhost:5173" 


processors:
  memory_limiter:
    check_interval: 1s       # How often to check memory usage
    limit_mib: 400           # Max memory in MiB before dropping data
    spike_limit_mib: 100     # Max additional memory allowed quickly


  filter:
    error_mode: ignore
    traces:
      span:
         - 'attributes["http.route"] == "/healthz" or attributes["url.path"] == "/healthz"'
         - 'attributes["url.path"] == "/"'
          


  batch:
    send_batch_size: 8192    # Max number of items (spans, metrics, logs) per batch
    timeout: 1s              # Max time before sending an incomplete batch

exporters:

  debug:
    verbosity: detailed # Options: basic, normal, detailed

  otlp:
    endpoint: "signoz-otel-collector:4317"
    tls:
      insecure: true
service:
  # Enable defined extensions
  extensions: [health_check]

  telemetry:
    logs:
      level: info # Collector's internal log level


  pipelines:
    # Trace Pipeline
    traces:
      receivers: [otlp] # Receive traces via OTLP
      # Add 'filter' processor BEFORE 'batch'
      processors: [memory_limiter, filter, batch]
      exporters: [debug,otlp] # Export them using the debug exporter

    # Metrics Pipeline
    metrics:
      receivers: [otlp] # Receive metrics via OTLP
      # Filter processor is configured only for traces, so not needed here
      processors: [memory_limiter, batch]
      exporters: [debug,otlp] # Export them using debug

    # Logs Pipeline
    logs:
      receivers: [otlp] # Receive logs via OTLP
      # Filter processor is configured only for traces, so not needed here
      processors: [memory_limiter, batch]
      exporters: [debug,otlp] # Export them using debug

